
-------------------------------------------------------------------
*** Broadcast ***
client > Server
{"mazeMessageType":"newPlayerJoinRequest"}
 
{"mazeMessageType":"newPlayerServerResponse","isAccepted":false}
OR
{"mazeMessageType":"newPlayerServerResponse","clientID":1,"isAccepted":true,"isPlayer":true,"multicastAddress":"239.255.255.250","multicastPort":9092,"ServerTcpAddr":"192.168.0.30","ServerTcpPort":9093}

calibration message
{"mazeMessageType":"newPlayerCalibration","calibrationData":"The Quick Brown Fox Jumps Over The Lazy Dog's Head. [repeated multiple times]"}


-------------------------------------------------------------------
When clients join Server
*** TCP ***
client > Server
tcpSenderThread: Json tcp join message:
{"mazeMessageType":"playerTcpConnection","clientID":1,"playerX":13,"playerY":13,"gateX":1,"gateY":13}

-------------------------------------------------------------------
When both players join:
*** Multicast ***
Server > Clients
start game message
{"mazeMessageType":"gameAndPlayerState","clientID":1,"gameState":4,"isPlayer":true,"playerState":4,"playerX":13,"playerY":13}
{"mazeMessageType":"gameAndPlayerState","clientID":2,"gameState":4,"isPlayer":false,"playerState":4,"playerX":2,"playerY":2}

-------------------------------------------------------------------
While in game:
*** TCP ***
Client > Server --- Sending position update
{"mazeMessageType":"playerCoordinates","clientID":1,"playerX":9,"playerY":12}

*** Multicast ***
Server > Client >  --- Sending position update to all players
{"mazeMessageType":"gameAndPlayerState","clientID":1,"gameState":4,"isPlayer":true,"playerState":4,"playerX":9,"playerY":12}