#ifndef MAZECLIENTSTATE_H_
#define MAZECLIENTSTATE_H_

#include "common.h"

//client game states
extern const int mazeClientState_NotInitialized;
extern const int mazeClientState_Initialized;
extern const int mazeClientState_Accepted;
extern const int mazeClientState_Connected; //TCP connected --- in lobby
extern const int mazeClientState_GameStarted;
extern const int mazeClientState_Won;
extern const int mazeClientState_Lost;

extern int mazeClientState;
extern int mazePlayerID;
extern bool amIPlayer;

//positions changed from server update
extern bool positionsChangedByServer;
//positions changed locally
extern bool positionsChangedLocally;

//flag to trigger sending new positions to server
extern bool sendNewPositionsToserver;

//locally changed new X and Y from doPlayerMovements()
extern int newLocalX;
extern int newLocalY;

//positions of both players
extern int playerX;
extern int playerY;
extern int opponentX;
extern int opponentY;

//positions of end gate
extern int gate_X;
extern int gate_Y;

extern bool stopBroadcast;

typedef struct {
	int playerID; //generated by server
	int role; //0=player, 1=chaser - determined by server
} MazePlayer;

/*
void setMazeState(int mazeStateToSet);
int getMazeState();
*/

#endif /* MAZECLIENTSTATE_H_ */
